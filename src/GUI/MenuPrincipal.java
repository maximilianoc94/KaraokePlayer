/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BackEnd.RepKaraoke;
import BackEnd.Cancion;
import BackEnd.Estructuras.ListaCanciones;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author isabe
 */
public class MenuPrincipal extends javax.swing.JFrame {

    RepKaraoke _App;
    Reproductor _Rep;
    AgregarCancion _Agregar;
    ListaCanciones _ListaActual;

    /**
     * Creates new form MenuPrincipal
     */
    public MenuPrincipal() {
        initComponents();
        setResizable(false);
    }

    public MenuPrincipal(RepKaraoke app) {
        initComponents();
        _App = app;
        _Rep = new Reproductor(_App);
        _Agregar = new AgregarCancion(_App);
        _ListaActual = _App.getBiblioteca();
        Cancion aux = _App.getBiblioteca().getCabeza();
        while (aux != null) {
            Modelo.addElement(aux.getArtista() + " - " + aux.getTitulo() + " - " + aux.getAlbum() + " - " + aux.getTrack() + " - " + _App.formatoTiempo(aux.getDuracion()));
            aux = aux.getProximo();
        }
        Lista.setSelectedIndex(0);
    }

    public DefaultListModel getModelo() {
        return Modelo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SortArtist = new javax.swing.JButton();
        ListaCanciones = new javax.swing.JScrollPane();
        Modelo = new DefaultListModel();
        Lista = new javax.swing.JList<>();
        AgregarCancion = new javax.swing.JButton();
        EliminarCancion = new javax.swing.JButton();
        Salir = new javax.swing.JButton();
        SortAlbumes = new javax.swing.JButton();
        SortTitulos = new javax.swing.JButton();
        SortTracks = new javax.swing.JButton();
        SortDuracion = new javax.swing.JButton();
        SortAleatorio = new javax.swing.JButton();
        Reproducir = new javax.swing.JButton();
        FiltrarCanciones = new javax.swing.JCheckBox();
        FiltrarVideos = new javax.swing.JCheckBox();
        FiltrarPistas = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mix Max Media Player - Maximiliano Casale");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(java.awt.Color.black);
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        SortArtist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-SortArtist-Fijo.png"))); // NOI18N
        SortArtist.setAlignmentY(0.0F);
        SortArtist.setBorder(null);
        SortArtist.setBorderPainted(false);
        SortArtist.setContentAreaFilled(false);
        SortArtist.setMargin(new java.awt.Insets(0, 0, 0, 0));
        SortArtist.setMaximumSize(new java.awt.Dimension(200, 30));
        SortArtist.setMinimumSize(new java.awt.Dimension(200, 30));
        SortArtist.setPreferredSize(new java.awt.Dimension(200, 30));
        SortArtist.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-SortArtist-Pressed.png"))); // NOI18N
        SortArtist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortArtistActionPerformed(evt);
            }
        });

        ListaCanciones.setBorder(null);

        Lista.setModel(Modelo);
        Lista.setBackground(new java.awt.Color(0, 0, 0));
        Lista.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reproduccion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 255, 0))); // NOI18N
        Lista.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        Lista.setForeground(new java.awt.Color(51, 255, 0));
        Lista.setSelectionBackground(new java.awt.Color(51, 255, 0));
        Lista.setSelectionForeground(new java.awt.Color(0, 0, 0));
        ListaCanciones.setViewportView(Lista);

        AgregarCancion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-Agregar-Fijo.png"))); // NOI18N
        AgregarCancion.setBorder(null);
        AgregarCancion.setMargin(new java.awt.Insets(0, 0, 0, 0));
        AgregarCancion.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-Agregar-Pressed.png"))); // NOI18N
        AgregarCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarCancionActionPerformed(evt);
            }
        });

        EliminarCancion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-Eliminar-Fijo.png"))); // NOI18N
        EliminarCancion.setBorder(null);
        EliminarCancion.setMargin(new java.awt.Insets(0, 0, 0, 0));
        EliminarCancion.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-Eliminar-Pressed.png"))); // NOI18N
        EliminarCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarCancionActionPerformed(evt);
            }
        });

        Salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-Salir-Fijo.png"))); // NOI18N
        Salir.setBorder(null);
        Salir.setMargin(new java.awt.Insets(0, 0, 0, 0));
        Salir.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-Salir-Pressed.png"))); // NOI18N
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        SortAlbumes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-SortAlbums-Fijo.png"))); // NOI18N
        SortAlbumes.setAlignmentY(0.0F);
        SortAlbumes.setBorder(null);
        SortAlbumes.setBorderPainted(false);
        SortAlbumes.setContentAreaFilled(false);
        SortAlbumes.setMargin(new java.awt.Insets(0, 0, 0, 0));
        SortAlbumes.setMaximumSize(new java.awt.Dimension(200, 30));
        SortAlbumes.setMinimumSize(new java.awt.Dimension(200, 30));
        SortAlbumes.setPreferredSize(new java.awt.Dimension(200, 30));
        SortAlbumes.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-SortAlbums-Pressed.png"))); // NOI18N
        SortAlbumes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortAlbumesActionPerformed(evt);
            }
        });

        SortTitulos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-SortTitle-Fijo.png"))); // NOI18N
        SortTitulos.setAlignmentY(0.0F);
        SortTitulos.setBorder(null);
        SortTitulos.setBorderPainted(false);
        SortTitulos.setContentAreaFilled(false);
        SortTitulos.setMargin(new java.awt.Insets(0, 0, 0, 0));
        SortTitulos.setMaximumSize(new java.awt.Dimension(200, 30));
        SortTitulos.setMinimumSize(new java.awt.Dimension(200, 30));
        SortTitulos.setPreferredSize(new java.awt.Dimension(200, 30));
        SortTitulos.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-SortTitle-Pressed.png"))); // NOI18N
        SortTitulos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortTitulosActionPerformed(evt);
            }
        });

        SortTracks.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-SortTracks-Fijo.png"))); // NOI18N
        SortTracks.setBorder(null);
        SortTracks.setBorderPainted(false);
        SortTracks.setContentAreaFilled(false);
        SortTracks.setMargin(new java.awt.Insets(0, 0, 0, 0));
        SortTracks.setPreferredSize(new java.awt.Dimension(200, 30));
        SortTracks.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-SortTracks-Pressed.png"))); // NOI18N
        SortTracks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortTracksActionPerformed(evt);
            }
        });

        SortDuracion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-SortDuracion-Fijo.png"))); // NOI18N
        SortDuracion.setAlignmentY(0.0F);
        SortDuracion.setBorder(null);
        SortDuracion.setBorderPainted(false);
        SortDuracion.setContentAreaFilled(false);
        SortDuracion.setMargin(new java.awt.Insets(0, 0, 0, 0));
        SortDuracion.setPreferredSize(new java.awt.Dimension(200, 30));
        SortDuracion.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-SortDuracion-Pressed.png"))); // NOI18N
        SortDuracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortDuracionActionPerformed(evt);
            }
        });

        SortAleatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-SortAleatorio-Fijo.png"))); // NOI18N
        SortAleatorio.setBorder(null);
        SortAleatorio.setBorderPainted(false);
        SortAleatorio.setContentAreaFilled(false);
        SortAleatorio.setMargin(new java.awt.Insets(0, 0, 0, 0));
        SortAleatorio.setPreferredSize(new java.awt.Dimension(200, 30));
        SortAleatorio.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-SortAleatorio-Pressed.png"))); // NOI18N
        SortAleatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortAleatorioActionPerformed(evt);
            }
        });

        Reproducir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-Reproducir-Fijo.png"))); // NOI18N
        Reproducir.setBorder(null);
        Reproducir.setMargin(new java.awt.Insets(0, 0, 0, 0));
        Reproducir.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-Reproducir-Pressed.png"))); // NOI18N
        Reproducir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReproducirActionPerformed(evt);
            }
        });

        FiltrarCanciones.setSelected(true);
        FiltrarCanciones.setAlignmentY(0.0F);
        FiltrarCanciones.setBorder(null);
        FiltrarCanciones.setContentAreaFilled(false);
        FiltrarCanciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-Select-Canciones-Unchecked.png"))); // NOI18N
        FiltrarCanciones.setMargin(new java.awt.Insets(0, 0, 0, 0));
        FiltrarCanciones.setMaximumSize(new java.awt.Dimension(200, 30));
        FiltrarCanciones.setMinimumSize(new java.awt.Dimension(200, 30));
        FiltrarCanciones.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-Select-Canciones-Checked.png"))); // NOI18N
        FiltrarCanciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltrarCancionesActionPerformed(evt);
            }
        });

        FiltrarVideos.setSelected(true);
        FiltrarVideos.setAlignmentY(0.0F);
        FiltrarVideos.setBorder(null);
        FiltrarVideos.setContentAreaFilled(false);
        FiltrarVideos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-Select-Videos-UnChecked.png"))); // NOI18N
        FiltrarVideos.setMargin(new java.awt.Insets(0, 0, 0, 0));
        FiltrarVideos.setMaximumSize(new java.awt.Dimension(200, 30));
        FiltrarVideos.setMinimumSize(new java.awt.Dimension(200, 30));
        FiltrarVideos.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-Select-Videos-Checked.png"))); // NOI18N
        FiltrarVideos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltrarVideosActionPerformed(evt);
            }
        });

        FiltrarPistas.setSelected(true);
        FiltrarPistas.setAlignmentY(0.0F);
        FiltrarPistas.setBorder(null);
        FiltrarPistas.setContentAreaFilled(false);
        FiltrarPistas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-Select-Pista-UnChecked.png"))); // NOI18N
        FiltrarPistas.setMargin(new java.awt.Insets(0, 0, 0, 0));
        FiltrarPistas.setMaximumSize(new java.awt.Dimension(200, 30));
        FiltrarPistas.setMinimumSize(new java.awt.Dimension(200, 30));
        FiltrarPistas.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/PngFiles/Boton-Select-Pista-Checked.png"))); // NOI18N
        FiltrarPistas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiltrarPistasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EliminarCancion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SortTitulos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SortDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SortTracks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SortAleatorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Reproducir, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SortAlbumes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AgregarCancion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FiltrarCanciones, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FiltrarVideos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FiltrarPistas, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SortArtist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(ListaCanciones, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ListaCanciones)
            .addGroup(layout.createSequentialGroup()
                .addComponent(SortArtist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(SortAlbumes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(SortTitulos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(SortDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(SortTracks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(SortAleatorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Reproducir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(FiltrarCanciones, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(FiltrarVideos, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(FiltrarPistas, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(AgregarCancion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(EliminarCancion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SortArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortArtistActionPerformed
        // TODO add your handling code here:
        ListaCanciones aux = new ListaCanciones();
        aux.OrdenarPorArtista(_App.getArtistas().getRaiz(), aux);
        Cancion Ordenada = aux.getCabeza();
        Modelo.clear();
        while (Ordenada != null) {
            Modelo.addElement(Ordenada.getArtista() + " - " + Ordenada.getTitulo() + " - " + Ordenada.getAlbum() + " - " + Ordenada.getTrack() + " - " + _App.formatoTiempo(Ordenada.getDuracion()));
            Ordenada = Ordenada.getProximo();
        }
        _ListaActual = aux;
        _App.setBiblioteca(aux);
        FiltrarCanciones.setSelected(true);
        FiltrarPistas.setSelected(true);
        FiltrarVideos.setSelected(true);
        Lista.setSelectedIndex(0);

    }//GEN-LAST:event_SortArtistActionPerformed

    private void SortTitulosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortTitulosActionPerformed
        ListaCanciones aux = new ListaCanciones();
        aux.OrdenarPorTitulo(_App.getTitulos().getRaiz(), aux);
        Cancion Ordenada = aux.getCabeza();
        Modelo.clear();
        while (Ordenada != null) {
            Modelo.addElement(Ordenada.getArtista() + " - " + Ordenada.getTitulo() + " - " + Ordenada.getAlbum() + " - " + Ordenada.getTrack() + " - " + _App.formatoTiempo(Ordenada.getDuracion()));
            Ordenada = Ordenada.getProximo();
        }
        _ListaActual = aux;
        _App.setBiblioteca(aux);
        FiltrarCanciones.setSelected(true);
        FiltrarPistas.setSelected(true);
        FiltrarVideos.setSelected(true);
        Lista.setSelectedIndex(0);
    }//GEN-LAST:event_SortTitulosActionPerformed

    private void ReproducirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReproducirActionPerformed
        _App.getReproduccion().LlenarReproduccion(_ListaActual);
        if (_App.getReproduccion().getCabeza() == null) {
            JOptionPane.showMessageDialog(null, "La lista de Reproduccion esta vacia");
        } else {
            _App.getReproduccion().RotarCabezaA(Lista.getSelectedIndex());
            _Rep.getTitulo().setText(_App.getReproduccion().getCabeza().getTitulo());
            _Rep.getArtista().setText(_App.getReproduccion().getCabeza().getArtista());
            this.setVisible(false);
            _Rep.setVisible(true);
        }
    }//GEN-LAST:event_ReproducirActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        // TODO add your handling code here:
        dispose();
        System.exit(0);
    }//GEN-LAST:event_SalirActionPerformed

    private void SortDuracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortDuracionActionPerformed
        ListaCanciones aux = new ListaCanciones();
        aux = aux.OrdenarPorDuracion(_App.getTitulos().getRaiz(), aux);
        Cancion Ordenada = aux.getCabeza();
        Modelo.clear();
        while (Ordenada != null) {
            Modelo.addElement(Ordenada.getArtista() + " - " + Ordenada.getTitulo() + " - " + Ordenada.getAlbum() + " - " + Ordenada.getTrack() + " - " + _App.formatoTiempo(Ordenada.getDuracion()));
            Ordenada = Ordenada.getProximo();
        }
        _ListaActual = aux;
        _App.setBiblioteca(aux);
        FiltrarCanciones.setSelected(true);
        FiltrarPistas.setSelected(true);
        FiltrarVideos.setSelected(true);
        Lista.setSelectedIndex(0);
    }//GEN-LAST:event_SortDuracionActionPerformed

    private void AgregarCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarCancionActionPerformed
        // TODO add your handling code here:
        _Agregar.setVisible(true);
    }//GEN-LAST:event_AgregarCancionActionPerformed

    private void SortAlbumesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortAlbumesActionPerformed
        ListaCanciones aux = new ListaCanciones();
        aux = aux.OrdenarPorAlbum(_App.getTitulos().getRaiz(), aux);
        Cancion Ordenada = aux.getCabeza();
        Modelo.clear();
        while (Ordenada != null) {
            Modelo.addElement(Ordenada.getArtista() + " - " + Ordenada.getTitulo() + " - " + Ordenada.getAlbum() + " - " + Ordenada.getTrack() + " - " + _App.formatoTiempo(Ordenada.getDuracion()));
            Ordenada = Ordenada.getProximo();
        }
        _ListaActual = aux;
        _App.setBiblioteca(aux);
        FiltrarCanciones.setSelected(true);
        FiltrarPistas.setSelected(true);
        FiltrarVideos.setSelected(true);
        Lista.setSelectedIndex(0);
    }//GEN-LAST:event_SortAlbumesActionPerformed

    private void SortTracksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortTracksActionPerformed
        ListaCanciones aux = new ListaCanciones();
        aux = aux.OrdenarPorTrack(_App.getTitulos().getRaiz(), aux);
        Cancion Ordenada = aux.getCabeza();
        Modelo.clear();
        while (Ordenada != null) {
            Modelo.addElement(Ordenada.getArtista() + " - " + Ordenada.getTitulo() + " - " + Ordenada.getAlbum() + " - " + Ordenada.getTrack() + " - " + _App.formatoTiempo(Ordenada.getDuracion()));
            Ordenada = Ordenada.getProximo();
        }
        _ListaActual = aux;
        _App.setBiblioteca(aux);
        FiltrarCanciones.setSelected(true);
        FiltrarPistas.setSelected(true);
        FiltrarVideos.setSelected(true);
        Lista.setSelectedIndex(0);
    }//GEN-LAST:event_SortTracksActionPerformed

    private void SortAleatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortAleatorioActionPerformed
        // TODO add your handling code here:
        ListaCanciones aux = new ListaCanciones();
        int tamano = _App.getTitulos().size(_App.getTitulos().getRaiz());
        aux = aux.OrdenarAleatorio(_App.getTitulos().getRaiz(), aux, tamano);
        Cancion Ordenada = aux.getCabeza();
        Modelo.clear();
        while (Ordenada != null) {
            Modelo.addElement(Ordenada.getArtista() + " - " + Ordenada.getTitulo() + " - " + Ordenada.getAlbum() + " - " + Ordenada.getTrack() + " - " + _App.formatoTiempo(Ordenada.getDuracion()));
            Ordenada = Ordenada.getProximo();
        }
        _ListaActual = aux;
        _App.setBiblioteca(aux);
        FiltrarCanciones.setSelected(true);
        FiltrarPistas.setSelected(true);
        FiltrarVideos.setSelected(true);
        Lista.setSelectedIndex(0);
    }//GEN-LAST:event_SortAleatorioActionPerformed

    private void EliminarCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarCancionActionPerformed
        if (Modelo.getSize() > 0) {
            int seleccion = Lista.getSelectedIndex();
            Modelo.removeElementAt(seleccion);
            Lista.setSelectedIndex(0);
            _App.getBiblioteca().EliminarPos(seleccion);
            _App.getArtistas().Llenar(_App.getBiblioteca());
            _App.getTitulos().Llenar(_App.getBiblioteca());
            _App.escribirData(_App.getBiblioteca());
        }
    }//GEN-LAST:event_EliminarCancionActionPerformed

    private void FiltrarCancionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltrarCancionesActionPerformed
        ListaCanciones aux;
        aux = _App.getBiblioteca().FiltrarLista(FiltrarPistas.isSelected(), FiltrarVideos.isSelected(), FiltrarCanciones.isSelected(), _App.getBiblioteca());
        Cancion Ordenada = aux.getCabeza();
        Modelo.clear();
        while (Ordenada != null) {
            Modelo.addElement(Ordenada.getArtista() + " - " + Ordenada.getTitulo() + " - " + Ordenada.getAlbum() + " - " + Ordenada.getTrack() + " - " + _App.formatoTiempo(Ordenada.getDuracion()));
            Ordenada = Ordenada.getProximo();
        }
        Lista.setSelectedIndex(0);
        _ListaActual = aux;
    }//GEN-LAST:event_FiltrarCancionesActionPerformed

    private void FiltrarVideosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltrarVideosActionPerformed
        ListaCanciones aux;
        aux = _App.getBiblioteca().FiltrarLista(FiltrarPistas.isSelected(), FiltrarVideos.isSelected(), FiltrarCanciones.isSelected(), _App.getBiblioteca());
        Cancion Ordenada = aux.getCabeza();
        Modelo.clear();
        while (Ordenada != null) {
            Modelo.addElement(Ordenada.getArtista() + " - " + Ordenada.getTitulo() + " - " + Ordenada.getAlbum() + " - " + Ordenada.getTrack() + " - " + _App.formatoTiempo(Ordenada.getDuracion()));
            Ordenada = Ordenada.getProximo();
        }
        Lista.setSelectedIndex(0);
        _ListaActual = aux;
    }//GEN-LAST:event_FiltrarVideosActionPerformed

    private void FiltrarPistasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiltrarPistasActionPerformed
        ListaCanciones aux;
        aux = _App.getBiblioteca().FiltrarLista(FiltrarPistas.isSelected(), FiltrarVideos.isSelected(), FiltrarCanciones.isSelected(), _App.getBiblioteca());
        Cancion Ordenada = aux.getCabeza();
        Modelo.clear();
        while (Ordenada != null) {
            Modelo.addElement(Ordenada.getArtista() + " - " + Ordenada.getTitulo() + " - " + Ordenada.getAlbum() + " - " + Ordenada.getTrack() + " - " + _App.formatoTiempo(Ordenada.getDuracion()));
            Ordenada = Ordenada.getProximo();
        }
        Lista.setSelectedIndex(0);
        _ListaActual = aux;
    }//GEN-LAST:event_FiltrarPistasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarCancion;
    private javax.swing.JButton EliminarCancion;
    private javax.swing.JCheckBox FiltrarCanciones;
    private javax.swing.JCheckBox FiltrarPistas;
    private javax.swing.JCheckBox FiltrarVideos;
    private javax.swing.JList<String> Lista;
    public DefaultListModel Modelo;
    private javax.swing.JScrollPane ListaCanciones;
    private javax.swing.JButton Reproducir;
    private javax.swing.JButton Salir;
    private javax.swing.JButton SortAlbumes;
    private javax.swing.JButton SortAleatorio;
    private javax.swing.JButton SortArtist;
    private javax.swing.JButton SortDuracion;
    private javax.swing.JButton SortTitulos;
    private javax.swing.JButton SortTracks;
    // End of variables declaration//GEN-END:variables
}
